# PLEASE UPDATE THE CODE AS PER YOUR USE CASE
# THIS CODE MAY OR MAY NOT WORK FOR YOU
# THIS CODE NEEDS FURTHER MODIFICATION TO WORK PROPERLY
# THIS CODE IS JUST LIKE A TEMPLATE, TO GIVE YOU AN IDEA

from flask import Flask, request
import gspread
from google.oauth2.service_account import Credentials

scopes = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive",
]

credentials = Credentials.from_service_account_file("FILE_ADDRESS", scopes=scopes)


def process_pump_data(raw_data):
    y = raw_data.split("#")
    duration = datetime.strptime(y[5], "%H:%M:%S")
    y[5] = str(duration.time())
    y[0] = y[0].replace("T", " ")
    y[6] = y[6] + " A"

    d = timedelta(hours=duration.hour, minutes=duration.minute, seconds=duration.second)
    x = d.total_seconds() / 60
    efficiency = round((int(y[4]) - int(y[3])) / x, 3)

    y.append(str(efficiency))
    y[4] += "%"
    y[3] += "%"
    return y


@app.route("/api/pump_logs", methods=["POST"])
def handle_json():
    if request.is_json:
        data = request.json
        # use the same key in arduino code. Any password or any key generated by you
        if data.get("api_key") == "YOUR_API_KEY":
            datay = request.form.get("data")
            y = process_pump_data(datay)
            gc = gspread.authorize(credentials)
            gs = gc.open_by_key(SHEET_IDS["pump"]).worksheet("Sheet1")
            gs.append_row(y, table_range="A2")
            return "201 Created"
        else:
            return "401 Unauthorized"
    else:
        return "501 Not Implemented"
